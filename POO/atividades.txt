

Atividade 2: Controle de Estoque de Produtos
Desenvolva uma classe Produto com:
● Atributos privados:
1. nome (String)
2. codigo (String)
3. quantidade (int)
4. precoUnitario (double)
● Métodos:
1. Construtor padrão
2. Construtor com todos os parâmetros
3. Métodos getters e setters
4. Método adicionarEstoque(int quantidade) que incremente a
quantidade
5. Método removerEstoque(int quantidade) que decremente a
quantidade

● Crie um programa com menu do-while para:
1. Cadastrar novo produto
2. Adicionar estoque
3. Remover estoque
4. Calcular valor total do estoque
5. Sair do programa

Atividade 3: Sistema de Gerenciamento de Atletas
Implemente uma classe Atleta:
● Atributos privados:
1. nome (String)
2. modalidade (String)
3. idade (int)
4. pesoEmKg (double)
5. alturaEmMetros (double)
● Métodos:
1. Construtores para inicializar o atleta
2. Métodos getters e setters
3. Método calcularIMC() que retorne o índice de massa corporal
4. Método classificarCategoria() que retorne a categoria baseada na
idade e modalidade
● Crie um menu com do-while para:
1. Cadastrar novo atleta
2. Calcular IMC
3. Verificar categoria
4. Atualizar informações
5. Sair

Atividade 4: Gerenciamento de Veículos
Crie uma classe Veiculo:
● Atributos privados:
1. modelo (String)
2. marca (String)
3. ano (int)
4. quilometragem (double)
● Métodos:
1. Construtores para inicializar os atributos
2. Métodos getters e setters
3. Método calcularIdadeVeiculo()
4. Método atualizarQuilometragem(double novaQuilometragem)
5. Método exibirInformacoes() que imprima todos os dados
● Implemente um programa com do-while para:
1. Cadastrar veículo
2. Atualizar quilometragem
3. Calcular idade do veículo
4. Exibir informações
5. Sair

Atividade 5: Sistema de Gerenciamento de Animais
Desenvolva uma classe Animal:
● Atributos privados:
1. nome (String)
2. especie (String)
3. idade (int)
4. peso (double)
● Métodos:
1. Construtores para inicializar o animal
2. Métodos getters e setters
3. Método calcularIdadeEmAnosHumanos()
4. Método atualizarPeso(double novoPeso)
5. Método classificarPorte()
● Crie um menu com do-while para:
1. Cadastrar novo animal
2. Atualizar peso
3. Calcular idade em anos humanos
4. Verificar porte
5. Exibir informações
6. Sair
Instruções Gerais
● Todos os exercícios devem utilizar encapsulamento rigoroso
● Utilize construtores para inicialização adequada dos objetos
● Implemente validações nos métodos quando necessário
● Use do-while para criação dos menus interativos
● Trate possíveis exceções e casos de erro
Dicas de Implementação
● Preste atenção aos modificadores de acesso (private, public)
● Crie métodos getters e setters de forma consistente
● Use construtores para diferentes formas de inicialização
● Implemente validações nos métodos de modificação de estado
● Utilize o do-while para criar menus interativos e robustos